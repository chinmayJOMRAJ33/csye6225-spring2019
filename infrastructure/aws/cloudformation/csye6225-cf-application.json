{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Cloud Formation Template - CSYE6225 - Creating EC2 instance , Security Groups and Ingress Rules",
	"Parameters": {
		"EC2Name": {
			"Type": "String"
		},
		"SubnetId1":{
			"Type":"String"
		},
		"SubnetId2":{
			"Type":"String"
		},
		"SubnetId3":{
			"Type":"String"
		},
		"VpcId":{"Type":"String"},
		"AMI":{"Type":"String"},
        
    "S3Bucket":{
            "Default":"",
            "Type":"String"
		},
		"S3CodeBucket":{
					"Default":"",
					"Type":"String"
		},
		"RoleArn":{
				"Default":"",
				"Type":"String"
		},
		"mySNSTopicName":{
			"Default":"reset_password",
			"Description": "SNS Topic name",
			"Type": "String"
	 	},
		 "keyName":{
			"Default":"",
			"Type":"String"
	},
	 	"DBName":{
		"Default": "csye6225",
		"Description": "This is my database name",
		"Type": "String"
		},
		"DBUsername" : {
			"Default" : "csye6225master",
			"Description" : "The database admin account username",
			"Type": "String",
			"AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*"
		},
		"DBPassword" : {
		"Default": "csye6225password",
		"Description" : "The database admin account password",
		"Type": "String",
		"AllowedPattern" : "[a-zA-Z0-9]*"
		},
		"TagKey":{
			"Type":"String",
			"Default":"csye6225-EC2-Key"
		},
		"TagValue":{
			"Type":"String",
			"Default":"csye6225-EC2"
		}

			

	},
	"Resources": {
		"ourEC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"DisableApiTermination": false,
				"ImageId" : {
					"Ref":"AMI"
				},
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/sda1",
						"Ebs" : {
							"VolumeSize":"20",
							"VolumeType" :"gp2"
						}
					}
                ],
								"IamInstanceProfile" : {"Ref":"EC2ServiceRoleInstanceProfile" },
								
				"SecurityGroupIds" : [{
					"Ref" : "WebServerSecurityGroup"
				}],
				"SubnetId" : {
					"Ref":"SubnetId1"
				},
				"Tags" :[{
					"Key":{"Ref":"TagKey"},
					"Value":{"Ref":"TagValue"}
					
			}],
				"KeyName":{
					"Ref" :"keyName"
				}
				,
				"UserData": {
					"Fn::Base64": {
							"Fn::Join": ["\n",
			 ["#!/bin/bash -xe ",
				"sudo bash",
				"yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
				"yum install mysql -y",
				"yum install awscli -y",
				"systemctl start ntpd",
				"systemctl enable ntpd",
				"cd /home/centos/",
				"cd /tmp",
				"wget http://apache.mirrors.pair.com/tomcat/tomcat-9/v9.0.16/bin/apache-tomcat-9.0.16.tar.gz",
				"mkdir /opt/tomcat",
				"tar xvf apache-tomcat-9*tar.gz -C /opt/tomcat --strip-components=1",
				"cd /opt/tomcat",
				"chgrp -R tomcat /opt/tomcat",
				"chmod -R g+r conf",
				"chmod g+x conf",
				"chown -R tomcat webapps/ work/ temp/ logs/",
				"cd /usr/lib/systemd/system",
				"touch tomcat.service",
				"echo '[Unit]' > tomcat.service",
				"echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
				"echo 'After=syslog.target network.target' >> tomcat.service",
				"echo '[Service]' >> tomcat.service",
				"echo 'Type=forking' >> tomcat.service",
				"echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
				"echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
				"echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
				"echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
				"echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
				"echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
				"echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
				"echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
				"echo 'User=tomcat' >> tomcat.service",
				"echo 'Group=tomcat' >> tomcat.service",
				"echo 'UMask=0007' >> tomcat.service",
				"echo 'RestartSec=10' >> tomcat.service",
				"echo 'Restart=always' >> tomcat.service",
				"echo '[Install]' >> tomcat.service",
				"echo 'WantedBy=multi-user.target' >> tomcat.service",
				"echo '#!/bin/sh' >> /opt/tomcat/bin/setenv.sh",
				{
				"Fn::Join": [
					"",
					[
						"echo 'JAVA_OPTS=\"${JAVA_OPTS} -Durl=jdbc:mysql://",
						{
							"Fn::GetAtt": [
								"MyRDSDB",
								"Endpoint.Address"
							]
						},
						":3306/csye6225\"'>> /opt/tomcat/bin/setenv.sh \n"
					]
				]
			},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.profiles.active=dev\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -DendpointUrl=https://s3.us-east-1.amazonaws.com\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dfolder=centos\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dusername=",{"Ref":"DBUsername"},"\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dpassword=",{"Ref":"DBPassword"},"\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -DbucketName=",{"Ref":"S3Bucket"},"\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			{"Fn::Join":["",["sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -DsnsName=",{"Ref":"mySNSTopicName"},"\\\"\" >> /opt/tomcat/bin/setenv.sh "]]},
			"chmod +x /opt/tomcat/bin/setenv.sh",
			"systemctl daemon-reload",  
				"systemctl enable tomcat.service",
				"systemctl start tomcat.service"]
			 ]}}
				



			},
			"DependsOn": "EC2ServiceRoleInstanceProfile"
        },
		"WebServerSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Access to ports 22, 80 & 443",
				"GroupName" :"csye6225-bk",
				"VpcId": {"Ref":"VpcId"},
				"SecurityGroupIngress" : [ {
					"IpProtocol" : "tcp",
					"FromPort" : "22",
					"ToPort" : "22",
					"CidrIp" : "0.0.0.0/0" },
				{
					"IpProtocol" : "tcp",
					"FromPort" : "80",
					"ToPort" : "80",
					"CidrIp" : "0.0.0.0/0" },
				{
					"IpProtocol" : "tcp",
					"FromPort" : "443",
					"ToPort" : "443",
					"CidrIp" : "0.0.0.0/0"
				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "3306",
					"ToPort" : "3306",
					"CidrIp" : "0.0.0.0/0"
				}]
			}
				},
				
				"AWSdynamotable": {
					"Type" : "AWS::DynamoDB::Table",
					"Properties" : {
						
						"AttributeDefinitions": [
							{
								"AttributeName": "id",
								"AttributeType": "S"
							}
						],
						"TableName":"csye6225",
						"KeySchema": [
							{
								"AttributeName": "id",
								"KeyType": "HASH"
							}
						],
						"ProvisionedThroughput":{
							"ReadCapacityUnits" : 2,
							"WriteCapacityUnits" : 2
						 }
		
					}
				},
				
		
			"DBSecurityGroup": {
					 "Type": "AWS::RDS::DBSecurityGroup",
					 "Properties": {
								"EC2VpcId" : { "Ref" : "VpcId" },
								"DBSecurityGroupIngress": [
									 {"EC2SecurityGroupId": {
													"Fn::GetAtt": [
													"WebServerSecurityGroup","GroupId"
													]
						}
									}
								],
								"GroupDescription": "DB SecurityGroup"
					 }
			},
		
				"dbSubnetGroup":{
					"Type" : "AWS::RDS::DBSubnetGroup",
					"Properties" : {
						"DBSubnetGroupDescription" : "RDS Subnet Group",
						"DBSubnetGroupName" : "rds",
						"SubnetIds" : [{"Ref":"SubnetId2"},{"Ref":"SubnetId3"}]
						
					 }
				 },
				"MyRDSDB" : {
								"Type" : "AWS::RDS::DBInstance",
								"Properties" : {
										"AllocatedStorage" : "10",
										"MultiAZ" : "False",
										"DBInstanceIdentifier" : "csye6225",
										"DBInstanceClass" : "db.t2.micro",
										"MasterUsername" : "csye6225master",
										"MasterUserPassword" : "csye6225password",
										"Engine" : "MySQL",
				"DBName" : "csye6225",
				"DBSubnetGroupName":{
					"Ref":"dbSubnetGroup"
				},
				"PubliclyAccessible":true,
				"DBSecurityGroups" : [ { "Ref" : "DBSecurityGroup"}]
						}
					},

        "CodeDeployApplication":{
            "Type" : "AWS::CodeDeploy::Application",
            "Properties" : {
              "ApplicationName" : "csye6225-webapp",
              "ComputePlatform" : "Server"
            }
            
				},
				

        "CodeDeployApplicationGroup":
            {
                "Type" : "AWS::CodeDeploy::DeploymentGroup",
                "Properties" : {
                  "ApplicationName" : {"Ref" : "CodeDeployApplication"},
                  "AutoRollbackConfiguration" : {
                    "Events" : [ "DEPLOYMENT_FAILURE" ]
                  },
                  "DeploymentConfigName" : "CodeDeployDefault.AllAtOnce",
                  "DeploymentGroupName" : "csye6225-webapp-deployment",
                  "DeploymentStyle" : {
                    "DeploymentType" : "IN_PLACE",
                    "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
                  },
									"Ec2TagFilters": [
                    {
                        "Key": { "Ref": "TagKey" },
                        "Value": { "Ref": "TagValue" },
                        "Type": "KEY_AND_VALUE"
                    }
                ],
                  "ServiceRoleArn" : {"Ref":"RoleArn"}
                },
								"DependsOn": ["CodeDeployApplication","ourEC2Instance"]
							
						},

					"CodeDeployEC2S3": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "This policy allows EC2 instances to get data from S3 buckets. This is required for EC2 instances to download latest application revision.",
                "Path": "/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:Get*",
                                "s3:List*",
                                "s3:Put*",
                                "s3:Delete*"
                            ],
                            "Resource": [
                                {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"S3Bucket"},"/*"]]}
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:Get*",
                                "s3:List*"
                            ],
                            "Resource":[
                                {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"S3CodeBucket"},"/*"]]}
                            ]
                        }
                    ]
								},
								"Roles":[{"Ref":"CodeDeployEC2ServiceRole"}],
                "ManagedPolicyName": "CodeDeployEC2S3"
            }
				},        
				"CodeDeployEC2ServiceRole": {
					"Type": "AWS::IAM::Role",
					"Properties": {
						"RoleName" : "CodeDeployEC2ServiceRole",
						 "AssumeRolePolicyDocument": {
								"Version" : "2012-10-17",
								"Statement": [ {
									 "Effect": "Allow",
									 "Principal": {
											"Service": [ "ec2.amazonaws.com" ]
									 },
									 "Action": [ "sts:AssumeRole" ]
								} ]
						 },
						 "Path": "/"
						 }
			 
			 }, 
						"EC2ServiceRoleInstanceProfile": {
							"Type": "AWS::IAM::InstanceProfile",
							"Properties": {
									"Path": "/",
									"Roles": [
													"CodeDeployEC2ServiceRole"
									],
									"InstanceProfileName": "EC2ServiceRoleInstanceProfile"
							},
							"DependsOn": "CodeDeployEC2ServiceRole"
					}
						
	}	
}
